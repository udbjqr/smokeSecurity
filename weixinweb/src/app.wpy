<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/login',
      'pages/index',
      'pages/main'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: "#a9b7b7",
      selectedColor: "#11cd6e",
      borderStyle: "white",
      list: [
        {
          pagePath: "pages/main",
          text: "首页"
        },
        {
          pagePath: "pages/index",
          text: "日志"
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }
  com(){
    console.log(144)
  }
  $request(url, data, ok, failing, handleError, param = 1,sessionId){
    var paramSession = [{},
      { 'content-type': 'application/json', 'Cookie': 'JSESSIONID=' + sessionId }, 
      { 'content-type': 'application/json' },
      { 'content-type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=' + sessionId},
      { 'content-type': 'application/x-www-form-urlencoded'}]
    return new Promise((resolve, reject) => {
      wx.request({
        url: url,
        data:data,
        header: paramSession[param],
        method: 'POST',
        success:res => {
          res.data = JSON.parse(JSON.stringify(res.data))
          if (res.data.code === 0) {
            ok(res.data.data);
            resolve(res)
          } else {
            resolve(res)
            if (failing)
              failing(res.data, res.data.code, res.data.message);
          }
        },
        fail:error => {
          console.log("error throw", error);
          if (handleError) 
            handleError(error)
          
        }
      })
    })
  }
  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
