<style lang="less">
  @mess_width:200rpx;
  @main_height:500rpx;
  @ab_main:50rpx;
  @main_back:#fbfbfb;
  body{
    background: @main_back
  }
  .topMain{
    height: @main_height;width:100%;overflow: hidden;
    background: linear-gradient(to bottom right, rgb(127, 255, 206) , rgb(50, 184, 106)); /* 标准的语法 */
  }
  .topyin{
    position: absolute;width: 100%;padding: 0rpx ;
  }
  .icon{
    float: right;padding: 20rpx 30rpx 0 0;color: @main_back;
  }
  .codeMessage{
    width: @mess_width;height: @mess_width;border-radius: 50%; box-shadow: 0 0 0 10px rgba(241, 238, 236, 0.6);
    margin: 0 auto;text-align: center;background: @main_back;line-height: @mess_width;margin-top: 150rpx;
    font-size: 50rpx;
  }
  .abMain{
    position: absolute;top:@main_height - (@ab_main / 2);background: #fbfbfb;width: 100%;
    height: @ab_main;border-radius: 100%;background: white;z-index: 2;
  }
  .main_panel{
    z-index:9999;width: 100%;position: absolute;top:@main_height;
  }
  .main_text:before{
    width: 35%;height: 6rpx;background: rgb(50, 184, 106);content:" ";display: block;text-align: center;margin: 0 auto;
    margin-bottom: 20rpx;
  }
  .main_text{
    text-align: center;
  }
  .add_device{
    position: absolute;top:90rpx;right: 20rpx;background: @main_back;border-radius: 10%;
  }
  .san{
    position: absolute;
    width: 0;
    height: 0;
    border-width: 20rpx;
    right: 12rpx;
    top:-33rpx;
    border-style: solid;
    border-color:  transparent transparent white transparent;
  }
  .add_list_view{
    padding: 5rpx 20rpx;font-size: 30rpx;
  }
  .add_icon{
    font-size: 40rpx;color: rgb(50, 184, 106);
  }
</style>
<template>
  <view>
    <van-toast id="van-toast" />
    <view class="topMain">
      <view class="topyin">
        <van-icon name="{{icon}}" class="icon" size="45rpx" @tap="add_shows"/>
        <van-icon name="question" class="icon" size="45rpx"/>
      </view>
      <view class="codeMessage">
        {{code.message}}
      </view>
    </view>
    
    <view class="main_panel">
      <view class="main_text">我的场所</view>
      <repeat for="{{list}}" key="index" index="index" item="item">
        <van-panel @tap="native_device('{{item.id}}')" title="{{item.name}}" desc="{{item.address}}" status="{{item.note}}"></van-panel>
      </repeat>

    </view>
    <view class="abMain"></view>
    <view class="add_device" hidden="{{add_show}}">
      <view class="san"></view>
      <repeat for="{{add_list}}" key="index" index="index" item="item">
        <view @tap="native_url('{{item.url}}')" class="add_list_view">
          <text class="add_icon">+ </text>
          <text>{{item.name}}</text>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import  Toast  from '../components/vant/toast/toast';
 
  export default class main extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      usingComponents: {
        "van-button": "../components/vant/button/index",
        "van-field": "../components/vant/field/index",
        "van-icon": "../components/vant/icon/index",
        "van-panel": "../components/vant/panel/index",
        "van-toast": "../components/vant/toast/index"
      }
    }
    data = {
      code:{
        message:'正常',
        status:1
      },
      list: [],
      add_list: [{url: 'adddevice', name: '添加设备'}, {url: 'addplace', name: '添加场所'}],
      add_show:true,
      icon:'add-o'
    }
    methods = {
      add_shows(){
        this.add_show = !this.add_show
        if(this.add_show){
          this.icon = 'add-o'
        }else{
          this.icon = 'close'
        }
      },
      native_url(url){
        wx.reLaunch({
            url: url
        })
      },
      native_device(id){
        wepy.$store.dispatch({ type : 'PLACEID' , payload : id})
        wepy.switchTab({
          url: '/pages/device'
        })
      }
    }

    onLoad() {
        wepy.$request('queryPlace',{user_id:wepy.$store.getState().register.user.id},data=>{
          this.list = data.place_list
        },(data,code,mess)=>{
          Toast(data.data.message);
        })
    }
  }
</script>
