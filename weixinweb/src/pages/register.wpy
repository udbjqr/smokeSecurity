<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    display: flex;
    width: 80%;
    margin: 20rpx auto;
    border-radius: 10rpx;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>

  <view class="conmain">
    <van-toast id="van-toast" />
<van-cell-group>
  <van-field
    value="{{form.name}}"
    clearable
    left-icon="contact"
    placeholder="请输入用户名"
    bind:change="onChangeName"
  />
  <van-field
    value="{{form.login_name}}"
    clearable
    left-icon="contact"
    placeholder="请输入登录名"
    bind:change="onChangeUsername"
  />
  <van-field
    value="{{form.telephone}}"
    clearable
    left-icon="contact"
    placeholder="请输入手机号"
    bind:change="onChangePhone"
  />

  <van-field
    value="{{form.passwd}}"
    type="password"
    left-icon="edit-data"
    placeholder="请输入密码"
    border="{{ false }}"
    bind:change="onChangePassword"
  />
</van-cell-group>

<van-button @tap="toastShow" type="primary"> 
      注册 </van-button>
</view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import  Toast  from '../components/vant/toast/toast';
 
  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '注册',
      usingComponents: {
        "van-button": "../components/vant/button/index",
        "van-field": "../components/vant/field/index",
        "van-toast": "../components/vant/toast/index"
      }
    }
    data = {
      imgUrl:'./img/1.jpg',
      form:{
        login_name:'',
        passwd:'',
        telephone:'',
        name:''
      },
      userInfo:{}
    }
    methods = {
      toastShow(){
        wepy.$request('/regist',this.form,data=>{
          wepy.$store.dispatch({ type : 'STATUS' , payload : 2})
          wepy.redirectTo({
            url: '/pages/login'
          })
        },(data,code,mess)=>{
          Toast(data.data.message);
        })
        // this.$parent.com()
      },
      onChangeName(e) {
        this.data.form.name = e.detail
      },
      onChangeUsername(e) {
        this.data.form.login_name = e.detail
      },
      onChangePassword(e) {
        this.data.form.passwd = e.detail
      },
      onChangePhone(e) {
        this.data.form.telephone = e.detail
      }
    }

    onLoad() {
      let self = this
      this.$parent.getUserInfo((userInfo) =>{
        if (userInfo) {
          self.userInfo = userInfo
          console.log(self.userInfo)
        }

      })
    }
  }
</script>
