<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    display: flex;
    width: 80%;
    margin: 20rpx auto;
    border-radius: 10rpx;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>

  <view class="conmain">
    <van-toast id="van-toast" />
  <image @tap="bindViewTap" class="userinfo-avatar" src="{{imgUrl}}" mode="cover"/>
<van-cell-group>
  <van-field
    value="{{form.login_name}}"
    required
    clearable
    left-icon="contact"
    placeholder="请输入用户名"
    bind:change="onChangeUsername"
  />

  <van-field
    value="{{form.password}}"
    type="password"
    left-icon="edit-data"
    placeholder="请输入密码"
    required
    border="{{ false }}"
    bind:change="onChangePassword"
  />
</van-cell-group>

  <van-button @tap="toastShow" type="primary"> 
      登录 </van-button>
  <van-button @tap="register" type="primary"> 
      注册 </van-button>

  <van-button @tap="forget" type="primary"> 
      忘记密码 </van-button>
</view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import  Toast  from '../components/vant/toast/toast';
 
  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '登录',
      usingComponents: {
        "van-button": "../components/vant/button/index",
        "van-field": "../components/vant/field/index",
        "van-toast": "../components/vant/toast/index"
      }
    }
    data = {
      imgUrl:'./img/1.jpg',
      form:{
        login_name:'',
        password:''
      },
      userInfo:{}
    }
    methods = {
      toastShow(){
        wepy.$request('login',this.form,data=>{
          Toast.success('成功登录');
          console.log(data.user)
          wepy.setStorage({
            key: 'user',
            data: data.user,
            success: res => {
              console.log('异步保存成功')
            }
          })
          wepy.switchTab({
            url: '/pages/main'
          })
        },(data,code,mess)=>{
          Toast.fail(data.message);
        })
      },
      register(){
        wepy.redirectTo({
          url: '/pages/register'
        })
      },
      forget(){
        wepy.redirectTo({
          url: '/pages/forget'
        })
      },
      onChangeUsername(e) {
        this.form.login_name = e.detail
      },
      onChangePassword(e) {
        this.form.password = e.detail
      },
    }

    onLoad() {
      switch(wepy.$store.getState().register.code){
        case 2:
          wepy.$store.dispatch({ type : 'STATUS' , payload : 1})
          wx.showToast({
            title: '注册成功',
            icon: 'success',
            duration: 2000
          })
          break;
        case 3:
          wepy.$store.dispatch({ type : 'STATUS' , payload : 1})
          wx.showToast({
            title: '成功修改密码',
            icon: 'success',
            duration: 2000
          })
          break;
        default:
          break;
      }
      let self = this
      this.$parent.getUserInfo((userInfo) =>{
        if (userInfo) {
          self.userInfo = userInfo
          console.log(self.userInfo)
        }
      })
    }
  }
</script>
